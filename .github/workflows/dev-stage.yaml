name: Deploy Dev Stage

on:
  push:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      API_KEY: ${{ secrets.NEON_API_KEY }}
      STAGE: dev
      GH_TOKEN: ${{ github.token }} # github cli -> gh
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0 
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20.11"
        cache: 'npm'
    - name: Install dependencies
      run: npm install --force --legacy-peer-deps
    - name: Install neonctl, serverless and tsx
      run: npm install -g neonctl serverless@latest tsx --force --legacy-peer-deps
    - name: Branch Connection String in Parameter Store
      run: |
        export DB_URL=$(neonctl connection-string --branch dev --api-key ${{ env.API_KEY }})
        npx tsx src/cli/putSecret.js dev $DB_URL
    - name: Authenticate Serverless Framework
      run: echo "SERVERLESS_ACCESS_KEY=${{ secrets.SERVERLESS_ACCESS_KEY }}" >> $GITHUB_ENV
    - name: Remove dev stage
      run: |
        npm run remove:dev
    - name: Deploy dev stage
      run: |
        npm run deploy:dev
    - name: Remove prod stage
      run: |
        npm run remove:prod
    - name: Dev Stage Pull Request
      run: |
        export PR_BRANCH=$(git branch --show-current)
        export DEFAULT_BRANCH=$(git remote show origin | awk '/HEAD branch/ {print $NF}')
        echo "$PR_BRANCH and $DEFAULT_BRANCH"
        export DEV_STAGE_INFO=$(npm run info:dev)
        gh pr create --title "Automated PR from Dev Stage" --body "$DEV_STAGE_INFO" --base $DEFAULT_BRANCH --head $PR_BRANCH --repo $GITHUB_REPOSITORY